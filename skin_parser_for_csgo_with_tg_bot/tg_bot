"""
–∫—Å –±–æ—Ç
"""

import json
import time
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from main import collect_data
from aiogram.utils.markdown import hbold, hlink

token = '[—Ç—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–∫–µ–Ω]'
# —Å–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = Bot(token=token, parse_mode=types.ParseMode.HTML)

# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher(bot)

# —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é "—Å—Ç–∞—Ä—Ç"
@dp.message_handler(commands='start')
async def start(message: types.Message):
    # —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ (—Ä–∞–±–æ—Ç–∞—Ç—å –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è)
    start_button = ['ü•Ñ–Ω–æ–∂–∏', '—à—Ç—É—Ä–º–æ–≤—ã–µ –≤–∏–Ω—Ç–æ–≤–∫–∏']
    # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard.add(*start_button)
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–¥—Ä—É–±–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await message.answer('–≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=keyboard)

# —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –Ω–æ–∂–∞–º–∏
@dp.message_handler(Text(equals='ü•Ñ–Ω–æ–∂–∏'))
async def knife(message: types.Message):
    await message.answer('–∂–¥–∏ –ø–æ–∫–∞...')

    # –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
    collect_data()

    # —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    # –ø—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –≤—Å–µ–º –∫–∞—Ä—Ç–æ—á–∫–∞–º
    for index, item in enumerate(data):
        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        card = f'{hlink(item.get("name"), item.get("url"))}\n'\
               f'{hbold("—Å–∫–∏–¥–∫–∞: ")}{item.get("overprice")}%\n'\
               f'{hbold("—Ü–µ–Ω–∞: ")}${item.get("price")}üî•'

        # –ø–∞—É–∑–∞ —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω –µ—Å–ª–∏ –±—É–¥–µ–º –∑–∞–∫–∏–¥—ã–≤–∞—Ç—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫
        if index % 20 == 0:
            time.sleep(3)

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        await message.answer(card)


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —à—Ç—É—Ä–º–æ–≤—ã—Ö –≤–∏–Ω—Ç–æ–≤–æ–∫
@dp.message_handler(Text(equals='—à—Ç—É—Ä–º–æ–≤—ã–µ –≤–∏–Ω—Ç–æ–≤–∫–∏'))
async def assault_rifle(message: types.Message):
    await message.answer('–∂–¥–∏ –ø–æ–∫–∞...')

    # –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
    collect_data(card_type=3)

    # —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    # –ø—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –≤—Å–µ–º –∫–∞—Ä—Ç–æ—á–∫–∞–º
    for index, item in enumerate(data):
        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        card = f'{hlink(item.get("name"), item.get("url"))}\n'\
               f'{hbold("—Å–∫–∏–¥–∫–∞: ")}{item.get("overprice")}%\n'\
               f'{hbold("—Ü–µ–Ω–∞: ")}${item.get("price")}üî•'

        # –ø–∞—É–∑–∞ —á—Ç–æ–±—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω –µ—Å–ª–∏ –±—É–¥–µ–º –∑–∞–∫–∏–¥—ã–≤–∞—Ç—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫
        if index % 20 == 0:
            time.sleep(3)

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        await message.answer(card)

def main():
    executor.start_polling(dp)

if __name__ == '__main__':
    main()
