"""
–ø–∏—à–µ–º —Ç–µ–ª–µ–≥–æ–±–æ—Ç–∞
"""

# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞
import json

from aiogram import Bot, Dispatcher, executor, types
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä text –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
from aiogram.dispatcher.filters import Text
from lesson_15 import data_collection
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ hlink –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É —Å –Ω—É–∂–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –∞ hbold —Ç–µ–∫—Å—Ç + –≤—ã–≤–æ–¥
from aiogram.utils.markdown import hbold, hlink

# —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
token = '[—Ç—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞]'

# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞, –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–∫–µ–Ω, –º–µ—Ç–æ–¥ parse_mode - —á—Ç–æ–±—ã —Å–∫—Ä—ã–≤–∞—Ç—å —Ç–µ–≥–∏ json —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ
bot = Bot(token=token, parse_mode=types.ParseMode.HTML)
# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ (–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–∞–º–∏)
dp = Dispatcher(bot)


# —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É
@dp.message_handler(commands='start')
async def start(message: types.Message):
    # —Å–æ–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    start_button = ['–∞–ª–∏', 'xbox', '–Ω–∞—É—à–Ω–∏–∫–∏']
    # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –ø–∞—Ä–∞–º–µ—Ç—Ä resize_keyboard=True - –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –∫–Ω–æ–ø–æ–∫
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    keyboard.add(*start_button)
    await message.answer("—Ç–æ–≤–∞—Ä—ã", reply_markup=keyboard)

# –Ω–∞–ø–∏—à–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∞–ª–∏
# —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∞ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –∫–Ω–æ–ø–∫–µ
@dp.message_handler(Text(equals='–∞–ª–∏'))
async def get_ali(message: types.Message):
    # –æ—Ç–ø—Ä–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —á–µ–ª –∂–¥–∞–ª –ø–æ–∫–∞ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
    await message.answer("–ü–æ–¥–æ–∂–¥–∏ –º–∞–ª—å—Ü–∞...")

    # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö
    data_collection()

    # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —á—Ç–µ–Ω–∏–µ
    with open('data.json', encoding='utf-8') as file:
        data = json.load(file)

    # –±–µ–∂–∏–º –ø–æ —Å–ø–∏—Å–∫—É –∫–∞—Ä—Ç–æ—á–µ–∫
    for item in data:
        # —Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É-—Å–æ–æ–±—â–µ–Ω–∏–µ–π —Å –ø–æ—Å—Ç—Ä–æ—á–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
        # hlink - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–µ–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∏ —Å—Å—ã–ª–∫—É –∫–æ—Ç–æ—Ä–∞—è –∑–∞–∫—Ä–µ–ø–∏—Ç—å—Å—è –∫ —Ç–µ–∫—Å—Ç—É
        # hbold –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–µ–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        card = f'{hlink(item.get("description"), item.get("url"))}\n' \
               f'{hbold("—Ü–µ–Ω–∞ –Ω–∞ —Ç–æ–≤–∞—Ä")} {item.get("price")}üî•'

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(card)




def main():
    executor.start_polling(dp)

if __name__ == "__main__":
    main()
